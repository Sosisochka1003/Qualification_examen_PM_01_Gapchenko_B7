// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Страховая_компания;

#nullable disable

namespace Страховая_компания.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20230627072110_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Страховая_компания.DataBase.Clients", b =>
                {
                    b.Property<int>("cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("cid"));

                    b.Property<DateOnly>("date_of_birth")
                        .HasColumnType("date");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("passport_number")
                        .HasColumnType("integer");

                    b.Property<int>("passport_series")
                        .HasColumnType("integer");

                    b.Property<string>("patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("cid");

                    b.ToTable("client");
                });

            modelBuilder.Entity("Страховая_компания.DataBase.Employees", b =>
                {
                    b.Property<int>("eid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("eid"));

                    b.Property<int>("branch")
                        .HasColumnType("integer");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("eid");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("Страховая_компания.DataBase.InsurancePayments", b =>
                {
                    b.Property<int>("ipid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ipid"));

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<int>("id_treaty")
                        .HasColumnType("integer");

                    b.Property<int>("payout_amount")
                        .HasColumnType("integer");

                    b.Property<int>("treatytid")
                        .HasColumnType("integer");

                    b.HasKey("ipid");

                    b.HasIndex("treatytid");

                    b.ToTable("insurancepayment");
                });

            modelBuilder.Entity("Страховая_компания.DataBase.ObjectsOfInsurance", b =>
                {
                    b.Property<int>("ooiid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ooiid"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ooiid");

                    b.ToTable("objectofinsurance");
                });

            modelBuilder.Entity("Страховая_компания.DataBase.Treaty", b =>
                {
                    b.Property<int>("tid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("tid"));

                    b.Property<int>("clientscid")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("date_of_conclusion")
                        .HasColumnType("date");

                    b.Property<int>("employeeseid")
                        .HasColumnType("integer");

                    b.Property<int>("id_client")
                        .HasColumnType("integer");

                    b.Property<int>("id_emp")
                        .HasColumnType("integer");

                    b.Property<int>("id_object")
                        .HasColumnType("integer");

                    b.Property<int>("insurance_payment")
                        .HasColumnType("integer");

                    b.Property<int>("objectsooiid")
                        .HasColumnType("integer");

                    b.HasKey("tid");

                    b.HasIndex("clientscid");

                    b.HasIndex("employeeseid");

                    b.HasIndex("objectsooiid");

                    b.ToTable("treaty");
                });

            modelBuilder.Entity("Страховая_компания.DataBase.InsurancePayments", b =>
                {
                    b.HasOne("Страховая_компания.DataBase.Treaty", "treaty")
                        .WithMany()
                        .HasForeignKey("treatytid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("treaty");
                });

            modelBuilder.Entity("Страховая_компания.DataBase.Treaty", b =>
                {
                    b.HasOne("Страховая_компания.DataBase.Clients", "clients")
                        .WithMany()
                        .HasForeignKey("clientscid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Страховая_компания.DataBase.Employees", "employees")
                        .WithMany()
                        .HasForeignKey("employeeseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Страховая_компания.DataBase.ObjectsOfInsurance", "objects")
                        .WithMany()
                        .HasForeignKey("objectsooiid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("clients");

                    b.Navigation("employees");

                    b.Navigation("objects");
                });
#pragma warning restore 612, 618
        }
    }
}
